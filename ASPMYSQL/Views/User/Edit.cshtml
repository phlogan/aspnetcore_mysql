@using BL.ViewModels
@using BL.Enums
@model UserViewModel
@{
    ViewBag.Title = "Editar usuário";
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.UserId);
    <div class="container">
        <div class="row">
            <h1 class="center">Editar usuário</h1>
            @Html.ValidationSummary(true)
            <div class="col s12">
                <div class="input-field">
                    @Html.TextBoxFor(m => m.Username, "", new { @class = "validate" })
                    <label for="Username">Username</label>
                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "red-text" })
                </div>
            </div>
            <div class="col s12">
                <div class="input-field">
                    @Html.DropDownList("UserType", Html.GetEnumSelectList<UserType>(), "Selecione o tipo")
                    @Html.ValidationMessageFor(m => m.UserType, "", new { @class = "red-text" })
                </div>
            </div>
            <div class="col s12">
                <div class="input-field">
                    @Html.TextBoxFor(m => m.Email, "", new { @type = "email", @class = "validate" })
                    <label for="Email">Email</label>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "red-text" })
                </div>
            </div>
            <div class="col s12">
                <div class="input-field">
                    @Html.PasswordFor(m => m.Password, new { @class = "validate" })
                    <label for="Password">Password</label>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "red-text" })
                </div>
            </div>
            <div class="col s12">
                <button type="submit" class="btn">
                    Submit
                    <i class="material-icons right">send</i>
                </button>
            </div>
        </div>
    </div>
}
