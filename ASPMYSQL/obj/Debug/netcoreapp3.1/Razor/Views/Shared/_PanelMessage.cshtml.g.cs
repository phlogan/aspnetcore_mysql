#pragma checksum "C:\Users\Logan\Source\Repos\aspnetcore_mysql\ASPMYSQL\Views\Shared\_PanelMessage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b192515024ea9c84b4dc8e2a4e230ff7cc0dee5a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__PanelMessage), @"mvc.1.0.view", @"/Views/Shared/_PanelMessage.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b192515024ea9c84b4dc8e2a4e230ff7cc0dee5a", @"/Views/Shared/_PanelMessage.cshtml")]
    public class Views_Shared__PanelMessage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div id=""panelMessageContainer"" style=""display: none"">
    <div class=""row"">
        <div class=""col s12 m5"">
            <div class=""card-panel"">
                <span class=""white-text ALTERAVEL"" id=""panelMessageText"">
                    I am a very simple card. I am good at containing small bits of information.
                    I am convenient because I require little markup to use effectively. I am similar to what is called a panel in other frameworks.
                </span>
            </div>
        </div>
    </div>
</div>

<script>

    function showErrorMessage(message) {
        showMessage(""error"", message);
    }

    function showSuccessMessage(message) {
        showMessage(""success"", message);
    }

    function showMessage(type, message) {
        var container = document.getElementById(""panelMessageContainer"");
        var messageText = document.getElementById(""panelMessageText"");
        switch (type) {
            case ""error"":
                container.cla");
            WriteLiteral(@"ssList.add(""red darken-2"");
                messageText.classList.add(""text-red text-darken-2"");
                messageText.innerHTML = message;
                break;

            case ""success"":
                container.classList.add(""green accent-3"");
                messageText.classList.add(""text-green text-accent-3"");
                messageText.innerHTML = message;
                break;
        }
        container.style.display = ""block"";
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
